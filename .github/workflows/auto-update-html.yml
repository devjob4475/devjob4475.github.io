name: Simple Cron Test

on:
  schedule:
    - cron: '*/30 * * * *'  # Run every 30 minutes
  workflow_dispatch:

jobs:
  update-html:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install node-fetch@2 xml2js

      - name: Run script to update index.html
        run: |
          node <<'EOF'
          const fetch = require('node-fetch');
          const { parseStringPromise } = require('xml2js');
          const fs = require('fs');  // Required for writing to index.html

          const loginUrl = 'https://cloud.ufxtv.com/api/user/login/?user_email=BE0268&user_password=1111&kauth=';
          const playBaseUrl = 'https://cloud.ufxtv.com/api/tv/channels/play/?c=uflix-epl1&kauth=';

          // Function to get playlist URL
          async function getPlaylist(user_loggedsession) {
              const playUrl = `${playBaseUrl}&user_loggedsession=${user_loggedsession}`;
              const response = await fetch(playUrl);
              const text = await response.text();
              return text.includes('<clear_url>') ? text : null;
          }

          // Login to get session
          async function login() {
              const response = await fetch(loginUrl);
              const text = await response.text();
              const sessionMatch = text.match(/<user_loggedsession>(.*?)<\/user_loggedsession>/);
              return sessionMatch ? sessionMatch[1] : null;
          }

          // Extract clear_url from XML response
          function extractClearUrl(xml) {
              const match = xml.match(/<clear_url>(.*?)<\/clear_url>/);
              return match ? match[1] : null;
          }

          // Generate and render playlist
          function renderPlaylist(clearUrl) {
              const fixedUrl = clearUrl.replace('playlist.m3u8', 'chunks.m3u8');
              const output = `
              #EXTM3U
              
              ########################################
              ### Uflix ### 
              ########################################
              
              #EXTINF:-1 group-title="กีฬา" tvg-logo="https://static.uflixtv.com/images/tv/channels_icons/epl-1.png",EPL-1
              ${fixedUrl}
              `;
              return output;  // Return the rendered playlist
          }

          // Start the process
          (async function() {
              const session = await login();
              if (session) {
                  const xmlData = await getPlaylist(session);
                  const clearUrl = extractClearUrl(xmlData);
                  if (clearUrl) {
                      const playlist = renderPlaylist(clearUrl);
                      fs.writeFileSync('index.html', playlist);  // Write the playlist to index.html
                  } else {
                      console.error("No clear_url found in the response");
                  }
              } else {
                  console.error("Login failed");
              }
          })();
          EOF

      - name: Commit and Push
        run: |
          git config --global user.name "devjob4475"
          git config --global user.email "thananchai216@gmail.com"
          git add index.html
          git commit -m "Auto update HTML on $(TZ='Asia/Bangkok' date)" || echo "No changes to commit"
          git push
